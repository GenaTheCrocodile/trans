#!/usr/bin/env python3
from os.path import basename, isfile
from urllib.error import HTTPError
from urllib.parse import quote
from urllib import request
from json import loads
from sys import argv
import argparse

languages = {
    "af": "afrikaans",
    "sq": "albanian",
    "am": "amharic",
    "ar": "arabic",
    "hy": "armenian",
    "az": "azerbaijani",
    "eu": "basque",
    "be": "belarusian",
    "bn": "bengali",
    "bs": "bosnian",
    "bg": "bulgarian",
    "ca": "catalan",
    "ceb": "cebuano",
    "ny": "chichewa",
    "zh-cn": "chinese (simplified)",
    "zh-tw": "chinese (traditional)",
    "co": "corsican",
    "hr": "croatian",
    "cs": "czech",
    "da": "danish",
    "nl": "dutch",
    "en": "english",
    "eo": "esperanto",
    "et": "estonian",
    "tl": "filipino",
    "fi": "finnish",
    "fr": "french",
    "fy": "frisian",
    "gl": "galician",
    "ka": "georgian",
    "de": "german",
    "el": "greek",
    "gu": "gujarati",
    "ht": "haitian creole",
    "ha": "hausa",
    "haw": "hawaiian",
    "iw": "hebrew",
    "hi": "hindi",
    "hmn": "hmong",
    "hu": "hungarian",
    "is": "icelandic",
    "ig": "igbo",
    "id": "indonesian",
    "ga": "irish",
    "it": "italian",
    "ja": "japanese",
    "jw": "javanese",
    "kn": "kannada",
    "kk": "kazakh",
    "km": "khmer",
    "ko": "korean",
    "ku": "kurdish (kurmanji)",
    "ky": "kyrgyz",
    "lo": "lao",
    "la": "latin",
    "lv": "latvian",
    "lt": "lithuanian",
    "lb": "luxembourgish",
    "mk": "macedonian",
    "mg": "malagasy",
    "ms": "malay",
    "ml": "malayalam",
    "mt": "maltese",
    "mi": "maori",
    "mr": "marathi",
    "mn": "mongolian",
    "my": "myanmar (burmese)",
    "ne": "nepali",
    "no": "norwegian",
    "ps": "pashto",
    "fa": "persian",
    "pl": "polish",
    "pt": "portuguese",
    "pa": "punjabi",
    "ro": "romanian",
    "ru": "russian",
    "sm": "samoan",
    "gd": "scots gaelic",
    "sr": "serbian",
    "st": "sesotho",
    "sn": "shona",
    "sd": "sindhi",
    "si": "sinhala",
    "sk": "slovak",
    "sl": "slovenian",
    "so": "somali",
    "es": "spanish",
    "su": "sundanese",
    "sw": "swahili",
    "sv": "swedish",
    "tg": "tajik",
    "ta": "tamil",
    "te": "telugu",
    "th": "thai",
    "tr": "turkish",
    "uk": "ukrainian",
    "ur": "urdu",
    "uz": "uzbek",
    "vi": "vietnamese",
    "cy": "welsh",
    "xh": "xhosa",
    "yi": "yiddish",
    "yo": "yoruba",
    "zu": "zulu",
    "fil": "Filipino",
    "he": "Hebrew",
}


def error(text):
    exit(f'{basename(__file__)}: error: {text}')


def showcodes():
    for code, lang in languages.items():
        print(f'{code} - {lang}')
    exit()


def parse():

    parser = argparse.ArgumentParser()
    parser.add_argument('tl', help='translation language')
    parser.add_argument('text', help='source text / word or a text file')
    parser.add_argument('-sl', help='source language (auto by default)', default='auto')
    parser.add_argument('-l', '--list-codes', help='list all language codes', action='store_true')

    if '-l' in argv or '--list-codes' in argv:  # Idk any other way to make it work
        showcodes()

    args = parser.parse_args()

    if (args.sl not in languages and args.sl != 'auto') or (args.tl not in languages):
        error('invalid language code')

    if isfile(args.text):
        with open(args.text, encoding='utf-8') as file:
            args.text = file.read()

    return args.tl, args.sl, args.text


if __name__ == '__main__':

    tl, sl, q = parse()

    try:
        text_json = request.urlopen(f'https://translate.googleapis.com/translate_a/single?client=gtx&sl={sl}&tl={tl}&dt=t&q={quote(q)}').read()
    except HTTPError as Err:
        if Err.code == 400:
            error('bad request, maybe your text is too long')
        else:
            error(repr(Err))

    text = loads(text_json)[0]

    for phrase in text:
        print(phrase[0], flush=True, end='')
    print()
